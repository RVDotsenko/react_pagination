{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","pages/query.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","totalItems","perPage","currentPage","fromItem","toItem","onPageChange","items","map","pagesCount","Math","ceil","length","pages","prevClass","cn","disabled","nextClass","className","onClick","event","value","target","textContent","href","index","liClass","active","showOptions","Query","useSearchParams","search","setSearch","useEffect","page","customPage","get","customItemsShow","checkedCastomPage","includes","sort","a","b","useState","showItems","setShowItems","setCurrentPage","id","onChange","defaultValue","option","htmlFor","range","App","basename","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99ca6a66.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { MouseEvent } from 'react';\n\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  totalItems: number,\n  perPage: number,\n  currentPage: number,\n  fromItem: number,\n  toItem: number\n  onPageChange: (value: number, range: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  totalItems,\n  perPage,\n  currentPage,\n  fromItem,\n  toItem,\n  onPageChange,\n}) => {\n  const items = getNumbers(1, totalItems)\n    .map(n => `Item ${n}`);\n\n  const pagesCount = Math.ceil(items.length / perPage);\n  const pages = getNumbers(1, pagesCount);\n\n  const handlePageSelector = (event: MouseEvent<HTMLElement>) => {\n    const value = (event.target as HTMLElement).textContent;\n\n    if (value) {\n      switch (value) {\n        case '«':\n          onPageChange(currentPage - 1, pagesCount);\n          break;\n\n        case '»':\n          onPageChange(currentPage + 1, pagesCount);\n          break;\n\n        default:\n          onPageChange(+value, pagesCount);\n          break;\n      }\n    }\n  };\n\n  const prevClass = cn({\n    'page-item': true,\n    disabled: currentPage === 1,\n  });\n\n  const nextClass = cn({\n    'page-item': true,\n    disabled: currentPage === pagesCount,\n  });\n\n  return (\n    <>\n      {/* eslint-disable-next-line */}\n      <ul\n        className=\"pagination\"\n        onClick={handlePageSelector}\n      >\n\n        <li className={prevClass}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n          >\n            «\n          </a>\n        </li>\n        {pages.map((index) => {\n          const liClass = cn({\n            'page-item': true,\n            active: currentPage === index,\n          });\n\n          return (\n            <li className={liClass} key={index}>\n              <a data-cy=\"pageLink\" className=\"page-link\" href={`#${index}`}>\n                {index}\n              </a>\n            </li>\n          );\n        })}\n\n        <li className={nextClass}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === pagesCount}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.map((n, index: number) => {\n          if (index >= fromItem - 1 && index <= toItem - 1) {\n            return (<li data-cy=\"item\" key={n}>{n}</li>);\n          }\n\n          return '';\n        })}\n      </ul>\n    </>\n  );\n};\n","import React, {\n  useState,\n  useEffect,\n} from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Pagination } from '../components/Pagination';\n\nconst totalItems = 42;\nconst showOptions = [3, 5, 10, 20];\n\nexport const Query: React.FC = () => {\n  const [search, setSearch] = useSearchParams();\n\n  useEffect(() => {\n    setSearch({ page: '2', perPage: '7' });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const customPage = search.get('page') || 1;\n  const customItemsShow = search.get('perPage') || 5;\n  const checkedCastomPage\n    = +customPage > Math.ceil(totalItems / +customItemsShow)\n      ? Math.ceil(totalItems / +customItemsShow)\n      : customPage;\n\n  if (!showOptions.includes(+customItemsShow)) {\n    showOptions.push(+customItemsShow);\n    showOptions.sort((a, b) => a - b);\n  }\n\n  const [showItems, setShowItems] = useState(+customItemsShow);\n  const [currentPage, setCurrentPage] = useState(+checkedCastomPage);\n\n  const fromItem = currentPage * showItems - showItems + 1;\n  const toItem = (currentPage * showItems) > totalItems\n    ? totalItems\n    : currentPage * showItems;\n\n  const handleItemsSelector = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setShowItems(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1>Items with Pagination</h1>\n\n        <p className=\"lead\" data-cy=\"info\">\n          {`Page ${currentPage} (items ${fromItem} - ${toItem} of ${totalItems})`}\n        </p>\n\n        <div className=\"form-group row\">\n          <div className=\"col-3 col-sm-2 col-xl-1\">\n            <select\n              data-cy=\"perPageSelector\"\n              id=\"perPageSelector\"\n              className=\"form-control\"\n              onChange={handleItemsSelector}\n              defaultValue={showItems}\n            >\n              {showOptions\n                .map(option => (\n                  <option\n                    value={option}\n                    key={option}\n                  >\n                    {option}\n                  </option>\n                ))}\n            </select>\n          </div>\n\n          <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n            items per page\n          </label>\n        </div>\n\n        <Pagination\n          totalItems={totalItems}\n          perPage={showItems}\n          currentPage={currentPage}\n          fromItem={fromItem}\n          toItem={toItem}\n          onPageChange={(value: number, range: number) => {\n            if (value > 0 && value <= range) {\n              setCurrentPage(value);\n            }\n          }}\n        />\n      </div>\n    </>\n  );\n};\n","import { HashRouter } from 'react-router-dom';\nimport { Query } from './pages/query';\n\nexport const App = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <Query />\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}